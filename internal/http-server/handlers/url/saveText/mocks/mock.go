// Code generated by MockGen. DO NOT EDIT.
// Source: saveText.go
//
// Generated by this command:
//
//	mockgen -source=saveText.go -destination=mocks/mock.go
//

// Package mock_saveText is a generated GoMock package.
package mock_saveText

import (
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockURLtextSaver is a mock of URLtextSaver interface.
type MockURLtextSaver struct {
	ctrl     *gomock.Controller
	recorder *MockURLtextSaverMockRecorder
	isgomock struct{}
}

// MockURLtextSaverMockRecorder is the mock recorder for MockURLtextSaver.
type MockURLtextSaverMockRecorder struct {
	mock *MockURLtextSaver
}

// NewMockURLtextSaver creates a new mock instance.
func NewMockURLtextSaver(ctrl *gomock.Controller) *MockURLtextSaver {
	mock := &MockURLtextSaver{ctrl: ctrl}
	mock.recorder = &MockURLtextSaverMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockURLtextSaver) EXPECT() *MockURLtextSaverMockRecorder {
	return m.recorder
}

// SaveURL mocks base method.
func (m *MockURLtextSaver) SaveURL(URL, alias string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SaveURL", URL, alias)
	ret0, _ := ret[0].(error)
	return ret0
}

// SaveURL indicates an expected call of SaveURL.
func (mr *MockURLtextSaverMockRecorder) SaveURL(URL, alias any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SaveURL", reflect.TypeOf((*MockURLtextSaver)(nil).SaveURL), URL, alias)
}
